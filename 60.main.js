(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[60],{

/***/ "./src/coins/iota.js":
/*!***************************!*\
  !*** ./src/coins/iota.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {module.exports = async function () {\n  // https://github.com/iotaledger/iota.js/blob/081e621599ce36d49f54d458131b9b32ab91ace5/packages/core/src/generateAddress.ts\n  const Coin = await __webpack_require__.e(/*! import() */ 12).then(__webpack_require__.t.bind(null, /*! ./coin */ \"./src/coins/coin.js\", 7));\n  const iota = await Promise.all(/*! import() */[__webpack_require__.e(1), __webpack_require__.e(2), __webpack_require__.e(3), __webpack_require__.e(5), __webpack_require__.e(6), __webpack_require__.e(7), __webpack_require__.e(35), __webpack_require__.e(42)]).then(__webpack_require__.t.bind(null, /*! @iota/core */ \"./node_modules/@iota/core/out/core/src/index.js\", 7));\n  const baseTrytes = (await __webpack_require__.e(/*! import() */ 55).then(__webpack_require__.t.bind(null, /*! base-x */ \"./node_modules/base-x/src/index.js\", 7))).default(\"9ABCDEFGHIJKLMNOPQRSTUVWXYZ\");\n  const randomBytes = (await __webpack_require__.e(/*! import() */ 27).then(__webpack_require__.t.bind(null, /*! randombytes */ \"./node_modules/randombytes/browser.js\", 7))).default;\n  const trytesRegex = /^[9A-Z]+$/;\n  return class IOTA extends Coin {\n    constructor(name, donate) {\n      super(name, donate);\n    }\n\n    create(d, Q, opts) {\n      return this._makeTrytesBytes(d.toBuffer());\n    }\n\n    makeRandom(opts) {\n      return this._makeTrytesRandom();\n    }\n\n    isPrivateKey(key) {\n      return trytesRegex.test(key);\n    }\n\n    decodePrivateKey(key) {\n      if (this.isPrivateKey(key)) {\n        return key;\n      } else {\n        throw new Error(\"Not a valid trytes\");\n      }\n    } // correspond to getAddressFormatNames, getAddressTitleNames\n\n\n    getAddressWith(key, mode) {\n      return iota.generateAddress(key, mode);\n    } // correspond to getAddressFormatNames, getAddressTitleNames\n\n\n    getWIFForAddress(key, mode) {\n      return key;\n    } // correspond to getWIFTitleNames\n\n\n    getWIFByType(key, mode) {\n      return key;\n    }\n\n    getAddressFormatNames() {\n      return [\"Normal (Index 0)\", \"Normal (Index 1)\", \"Normal (Index 2)\", \"Normal (Index 3)\", \"Normal (Index 4)\", \"Normal (Index 5)\", \"Normal (Index 6)\", \"Normal (Index 7)\", \"Normal (Index 8)\", \"Normal (Index 9)\", \"Normal (Index 10)\", \"Normal (Index 11)\", \"Normal (Index 12)\", \"Normal (Index 13)\", \"Normal (Index 14)\", \"Normal (Index 15)\"];\n    }\n\n    getAddressTitleNames() {\n      return [\"Public Address (Index 0)\", \"Public Address (Index 1)\", \"Public Address (Index 2)\", \"Public Address (Index 3)\", \"Public Address (Index 4)\", \"Public Address (Index 5)\", \"Public Address (Index 6)\", \"Public Address (Index 7)\", \"Public Address (Index 8)\", \"Public Address (Index 9)\", \"Public Address (Index 10)\", \"Public Address (Index 11)\", \"Public Address (Index 12)\", \"Public Address (Index 13)\", \"Public Address (Index 14)\", \"Public Address (Index 15)\"];\n    }\n\n    getWIFTitleNames() {\n      return [\"Trytes\"];\n    }\n\n    getPublicKey(key, compressed) {\n      return Buffer.allocUnsafe(0);\n    }\n\n    getPrivateKeyBuffer(key) {\n      return baseTrytes.decode(key);\n    }\n\n    havePrivateKey(key) {\n      return true;\n    }\n\n    isUnsure() {\n      return true;\n    }\n\n    _makeTrytesBytes(bytes) {\n      let draft = baseTrytes.encode(bytes);\n\n      while (draft.length % 81 !== 0) {\n        draft += \"9\";\n      }\n\n      return draft;\n    }\n\n    _makeTrytesRandom(bytes = 47) {\n      return this._makeTrytesBytes(randomBytes(bytes));\n    }\n\n  };\n}();\n\nmodule.exports.__esModule = true;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./src/coins/iota.js?");

/***/ })

}]);