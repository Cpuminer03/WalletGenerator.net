(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[20],{

/***/ "./src/ninja.singlewallet.js":
/*!***********************************!*\
  !*** ./src/ninja.singlewallet.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = async function () {\n  const privateKey = await Promise.all(/*! import() */[__webpack_require__.e(0), __webpack_require__.e(15)]).then(__webpack_require__.t.bind(null, /*! ./ninja.privatekey.js */ \"./src/ninja.privatekey.js\", 7));\n  const qrCode = await Promise.all(/*! import() */[__webpack_require__.e(16), __webpack_require__.e(14)]).then(__webpack_require__.t.bind(null, /*! ./ninja.qrcode */ \"./src/ninja.qrcode/index.js\", 7));\n\n  const open = function () {\n    if (!document.getElementById(\"btcaddress\").textContent) {\n      generateNewAddressAndKey();\n    }\n\n    document.getElementById(\"walletCommands\").style.display = \"block\";\n    document.getElementById(\"keyarea\").style.display = \"block\";\n    document.getElementById(\"currencyddl\").style.display = \"block\";\n    document.getElementById(\"singlearea\").style.display = \"block\";\n    document.getElementById(\"singlevanitygenstart\").style.display = \"inline\";\n    document.getElementById(\"singlevanitygenstop\").style.display = \"none\";\n  };\n\n  const close = function () {\n    document.getElementById(\"singlearea\").style.display = \"none\";\n    stopVanitygen();\n  }; // generate bitcoin address and private key and update information in the HTML\n\n\n  const generateNewAddressAndKey = function () {\n    try {\n      const key = privateKey.makeRandom();\n      const bitcoinAddress = privateKey.getAddressWith(key, publicMode);\n      const privateKeyWif = privateKey.getWIFForAddress(key, publicMode);\n      document.getElementById(\"btcaddress\").textContent = bitcoinAddress;\n      document.getElementById(\"btcprivwif\").textContent = privateKeyWif;\n      const keyValuePair = {\n        qrcode_public: bitcoinAddress,\n        qrcode_private: privateKeyWif\n      };\n      qrCode.showQrCode(keyValuePair, 4);\n      return {\n        address: bitcoinAddress,\n        wif: privateKeyWif\n      };\n    } catch (e) {\n      // browser does not have sufficient JavaScript support to generate a bitcoin address\n      alert(e);\n      console.error(e);\n      document.getElementById(\"btcaddress\").textContent = \"error\";\n      document.getElementById(\"btcprivwif\").textContent = \"error\";\n      document.getElementById(\"qrcode_public\").textContent = \"\";\n      document.getElementById(\"qrcode_private\").textContent = \"\";\n      return {\n        address: null,\n        wif: null\n      };\n    }\n  };\n\n  let vanityJob = null;\n\n  const startVanitygen = function (pattern) {\n    if (typeof vanityJob === \"string\") {\n      return;\n    }\n\n    if (!privateKey.isVanitygenPossible(pattern, publicMode)) {\n      alert(\"Invalid or impossible pattern!\");\n      return;\n    }\n\n    document.getElementById(\"singlevanitygenstart\").style.display = \"none\";\n    document.getElementById(\"singlevanitygenstop\").style.display = \"inline\";\n    document.getElementById(\"singlecommands\").style.display = \"none\";\n    document.getElementById(\"singlevanitygenpattern\").readOnly = true;\n    vanityJob = pattern;\n\n    const refresh = function () {\n      const job = vanityJob;\n\n      if (typeof job !== \"string\") {\n        return;\n      }\n\n      const {\n        address\n      } = generateNewAddressAndKey();\n\n      if (privateKey.testVanitygenMatch(job, address, publicMode)) {\n        stopVanitygen();\n      } else {\n        setTimeout(refresh, 0);\n      }\n    };\n\n    refresh();\n  };\n\n  const stopVanitygen = function () {\n    if (typeof vanityJob !== \"string\") {\n      return;\n    }\n\n    document.getElementById(\"singlevanitygenstart\").style.display = \"inline\";\n    document.getElementById(\"singlevanitygenstop\").style.display = \"none\";\n    document.getElementById(\"singlecommands\").style.display = \"block\";\n    document.getElementById(\"singlevanitygenpattern\").readOnly = false;\n    vanityJob = null;\n  };\n\n  let publicMode = 0;\n  const result = {\n    open,\n    close,\n    generateNewAddressAndKey,\n    startVanitygen,\n    stopVanitygen\n  };\n  Object.defineProperty(result, \"publicMode\", {\n    enumerable: true,\n    get: () => publicMode,\n    set: pm => {\n      publicMode = pm;\n    }\n  });\n  return result;\n}();\n\nmodule.exports.__esModule = true;\n\n//# sourceURL=webpack:///./src/ninja.singlewallet.js?");

/***/ })

}]);